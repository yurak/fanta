---
http_interactions:
- request:
    method: get
    uri: https://www.transfermarkt.com/player-path/profil/spieler/29316
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - product/version
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.transfermarkt.com
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      Date:
      - Sun, 31 Dec 2023 15:23:43 GMT
      X-Host:
      - web02
      X-User:
      - '0'
      Set-Cookie:
      - TMSESSID=413ef3bd8ab6e408964b6dd5f49a3615; path=/; domain=.transfermarkt.com;
        secure; HttpOnly; SameSite=lax
      Expires:
      - Sun, 31 Dec 2023 18:23:43 GMT
      Pragma:
      - ''
      Cache-Control:
      - public, max-age=600, must-revalidate
      Last-Modified:
      - Fri, 28 Jan 2022 23:00:00 GMT
      Location:
      - https://www.transfermarkt.com/cyril-thereau/profil/spieler/29316
      Permissions-Policy:
      - interest-cohort=()
      Access-Control-Allow-Origin:
      - "*"
      X-Cache-Status:
      - MISS
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 119f1de9910710178454184ca951fe8e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - WAW51-P1
      X-Amz-Cf-Id:
      - zUA_SDDRmhSbVIY5rzh8BKvAwjVpyWyvYM6SRtOqxiJXymox7ypyeQ==
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Sun, 31 Dec 2023 15:23:43 GMT
- request:
    method: get
    uri: https://www.transfermarkt.com/cyril-thereau/profil/spieler/29316
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - product/version
      Cookie:
      - TMSESSID=413ef3bd8ab6e408964b6dd5f49a3615
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.transfermarkt.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - nginx
      Date:
      - Sun, 31 Dec 2023 15:23:43 GMT
      Vary:
      - Accept-Encoding
      X-Host:
      - web09
      X-User:
      - '0'
      Set-Cookie:
      - TMSESSID=413ef3bd8ab6e408964b6dd5f49a3615; path=/; domain=.transfermarkt.com;
        secure; HttpOnly; SameSite=lax
      Expires:
      - Sun, 31 Dec 2023 18:23:43 GMT
      Pragma:
      - ''
      Cache-Control:
      - public, max-age=600, must-revalidate
      Last-Modified:
      - Fri, 28 Jan 2022 23:00:00 GMT
      X-Frame-Options:
      - DENY
      Permissions-Policy:
      - interest-cohort=()
      Access-Control-Allow-Origin:
      - "*"
      X-Cache-Status:
      - MISS
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1a77be77b0d4f395c20654f9f7d676c4.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - WAW51-P1
      X-Amz-Cf-Id:
      - uDw_sBbiW6L0wDoWJbSnSB5QYMP4J2wRGQNr_6gX6EA2yqhHxzvT0A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 31 Dec 2023 15:23:44 GMT
recorded_with: VCR 6.2.0
