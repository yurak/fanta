.page-block.table-results
  .web-header= render 'layouts/left_nav', league: league
  .web-header= render 'layouts/right_nav', league: league
  .mob-header= render 'layouts/mob_header', league: league, title: t('players.profile')
  = react_component("LeagueResults", prerender: true)
  .page-info
    .table-title= t('table.title')
    - if league.tournament.fanta?
      .table-block
        .default-headers.table-grid.national-grid
          .default-header-cell
          .default-header-cell= t('table.team')
          .default-header-cell= t('table.rounds')
          .default-header-cell
            = link_to league_results_path(league, order: 'points') do
              = t('table.f1_points')
              - if params[:order] == 'points'
                .table-header-dropdown
                  = image_tag('icons/dropdown.svg', class: 'filter-grey')
          .default-header-cell
            = link_to league_results_path(league, order: 'score') do
              = t('table.total_score')
              - if !params[:order] || params[:order] == 'score'
                .table-header-dropdown
                  = image_tag('icons/dropdown.svg', class: 'filter-grey')
          .default-header-cell
            = link_to league_results_path(league, order: 'lineup') do
              = t('table.best_lineup')
              - if params[:order] == 'lineup'
                .table-header-dropdown
                  = image_tag('icons/dropdown.svg', class: 'filter-grey')
        - @results.each_with_index do |result, i|
          .table-team-item.table-grid.national-grid.national-table-item
            .table-team-param.center= i+1
            .table-team-param.table-team-data
              = link_to team_path(result.team) do
                .results-team-logo
                  = image_tag(image_path(result.team.logo_path))
                .results-team-name
                  = result.team.human_name
            .table-team-param
              = result.draws
            .table-team-param
              = result.points
            .table-team-param.table-team-points
              = result.total_score.round(2)
            .table-team-param
              = result.best_lineup.round(2)
    - else
      .divisions-link
        = link_to tournament_divisions_path(league.tournament) do
          .divisions-link-text= 'ðŸ“Š Divisions' #t('auction_round.transfers')
          .divisions-link-icon
            = image_tag('icons/arrow_blue.svg')
      .table-block
        .default-headers.table-grid
          .default-header-cell.table-header-cell-first
          .default-header-cell= t('table.team')
          .default-header-cell= t('table.games')
          .default-header-cell= t('table.wins')
          .default-header-cell= t('table.draws')
          .default-header-cell= t('table.loses')
          .default-header-cell= t('table.gf')
          .default-header-cell= t('table.ga')
          .default-header-cell= t('table.gd')
          .default-header-cell= t('table.points')
          .default-header-cell.ts-cell= t('table.ts')
          .default-header-cell.form-cell= t('table.form')
          .default-header-cell.next-cell
            - if league.active?
              = t('table.next')
        - @results.each_with_index do |result, i|
          .table-team-item.table-grid
            .table-team-param.center{class: "promotion-#{ i < league.promotion} relegation-#{ i >= (league.results.count - league.relegation)}"}
              = i+1
            .table-team-param.table-team-data
              = link_to team_path(result.team) do
                .results-team-logo
                  = image_tag(image_path(result.team.logo_path))
                .results-team-name
                  = result.team.human_name
            .table-team-param.table-cell-number
              = result.matches_played
            .table-team-param.table-cell-number
              = result.wins
            .table-team-param.table-cell-number
              = result.draws
            .table-team-param.table-cell-number
              = result.loses
            .table-team-param.table-cell-number
              = result.scored_goals
            .table-team-param.table-cell-number
              = result.missed_goals
            .table-team-param.table-cell-number
              = result.goals_difference
            .table-team-param.table-team-points.table-cell-number
              = result.points
            .table-team-param.ts-cell
              = result.total_score.round(2)
            .table-team-param.form-cell
              - unless league.tournament.national?
                - result.form.each do |form|
                  .team-form-item{ class: "team-form-#{form[0]}" }
                    = form[0]
            .table-team-param.table-team-opponent
              - if league.active? && result.team.next_opponent
                = image_tag(result.team.next_opponent.logo_path)

    - if league.tours.closed.count > 1 && !league.tournament.fanta?
      .league-chart
        .league-chart-title= t('table.trend_title')
        %canvas#myChart

  .portrait-footer{ class: "portrait-footer-#{league.mantra?}"}
    = render 'layouts/league_links', league: league

%script{type: "text/javascript", src: "https://cdn.jsdelivr.net/npm/chart.js"}

:javascript
  $(document).ready(function() {
    const ctx = document.getElementById('myChart');
    const chart_data = JSON.parse("#{league.chart_data}".replace(/&quot;/g, '"'));

    new Chart(ctx, {
      type: 'line',
      data: chart_data,
      options: {
        responsive: true,
        scales: {
          y: { reverse: true, ticks: { precision: 0 } }
        },
        plugins: {},
        transitions: {
          show: { animations: { x: { from: 0 }, y: { from: 0 } } },
          hide: { animations: { x: { to: 0 }, y: { to: 0 } } }
        }
      }
    });
  });
